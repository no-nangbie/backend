plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

//group = 'com.continewbie'
//version = '0.0.1-SNAPSHOT'

javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

	//DB - h2
	runtimeOnly 'com.h2database:h2'

	//DB - Mysql
//	implementation 'mysql:mysql-connector-java:8.0.32'

	//Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
  
	//Gson
	implementation 'com.google.code.gson:gson'

	implementation "org.mapstruct:mapstruct:1.3.1.Final"
	implementation "org.projectlombok:lombok:1.18.16"
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

// 이제 순서 상관없음
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
	annotationProcessor "org.projectlombok:lombok:1.18.16"

   implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//Jwt
//   implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//   runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//   runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

tasks.named('javadoc') {
	source = sourceSets.main.allJava
	options.memberLevel = JavadocMemberLevel.PRIVATE
	destinationDir = file("build/docs/javadoc")
}
